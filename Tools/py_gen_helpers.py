"""
Generates the helper.py file
"""

import json
import os
import sys


def search_in_file(phrase: str, lines: list) -> int:
    """
    Searches for string in each line
    """
    for (i, line) in enumerate(lines):
        if phrase in line:
            return i
    return -1


if __name__ == "__main__":
    loc = os.path.realpath(os.path.dirname(__file__))

    msg_path = loc + '/../TelemMessages/'
    py_path = loc + '/../py/TelemMessages/'

    helper = "\"\"\"\n"
    helper += "Autogenerated decoder\n"
    helper += "\"\"\"\n"
    helper += "\n"
    helper += "import TelemMessages\n"
    helper += "\n"
    helper += "\n"
    helper += "def decode_msg(buf):\n"
    helper += "    \"\"\"\n"
    helper += "    Returns message class based on header type\n"
    helper += "    \"\"\"\n"
    helper += "\n"
    helper += "    raw_data = buf.getbuffer().tobytes()\n"
    # Spaces before if
    helper += "    "

    # open json file
    with open(msg_path + 'messages.json') as json_file:
        data = json.load(json_file)
        for msg in data:
            length = msg["length"].to_bytes(2, byteorder='big')

            with open(py_path + msg["name"] + '.py', 'r+') as fd:
                contents = fd.readlines()
                print("opened " + msg["name"])

                # find line number of phrase
                index = search_in_file("self.header", contents)
                if index == -1:
                    print("phrase not found in file, its broken")
                    sys.exit(-1)

                print(index)
                contents.insert(index + 1, "        self.header.flag = 0x7e\n")
                contents.insert(index + 2, "        self.header.type = " + hex(msg["type"]) + "\n")
                contents.insert(index + 3, "        self.header.length = bytes([ " + hex(length[0]) + ", " + hex(length[1]) + " ])\n")

                fd.seek(0)
                fd.writelines(contents)

                # if or elif with spaces
                helper += "if raw_data[3] == " + hex(msg["type"]) + ":\n"
                helper += "        return TelemMessages." + msg["name"] + "()._decode_one(buf)\n"
                helper += "    el"

    helper += "se:\n"
    helper += "        return None\n"
    output_file = open(py_path + "../helper.py", "w")

    output_file.write(helper)
    output_file.close()
